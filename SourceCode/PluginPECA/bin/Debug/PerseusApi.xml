<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PerseusApi</name>
    </assembly>
    <members>
        <member name="M:PerseusApi.Document.IDocumentMultiAnalysis.GetParameters(PerseusApi.Document.IDocumentData[],System.String@)">
            <summary>
            Define here the parameters that determine the specifics of the analysis.
            </summary>
            <param name="mdata">The parameters might depend on the document.</param>
            <param name="errString">Set this to a value != null if an error occured. The error string will be displayed to the user.</param>
            <returns>The set of parameters.</returns>
        </member>
        <member name="M:PerseusApi.Document.IDocumentMergeWithMatrix.GetParameters(PerseusApi.Document.IDocumentData,PerseusApi.Matrix.IMatrixData,System.String@)">
            <summary>
            Define here the parameters that determine the specifics of the processing.
            </summary>
            <param name="data">The parameters might depend on the data.</param>
            <param name="inMatrix">and on the matrix as well.</param>
            <param name="errString">Set this to a value != null if an error occured. The error string will be displayed to the user.</param>
            <returns>The set of parameters.</returns>
        </member>
        <member name="M:PerseusApi.Document.IDocumentToMatrix.GetParameters(PerseusApi.Document.IDocumentData,System.String@)">
            <summary>
            Define here the parameters that determine the specifics of the processing.
            </summary>
            <param name="mdata">The parameters might depend on the data matrix.</param>
            <param name="errString">Set this to a value != null if an error occured. The error string will be displayed to the user.</param>
            <returns>The set of parameters.</returns>
        </member>
        <member name="M:PerseusApi.Document.IDocumentFromMatrix.GetParameters(PerseusApi.Matrix.IMatrixData,System.String@)">
            <summary>
            Define here the parameters that determine the specifics of the processing.
            </summary>
            <param name="mdata">The parameters might depend on the data matrix.</param>
            <param name="errString">Set this to a value != null if an error occured. The error string will be displayed to the user.</param>
            <returns>The set of parameters.</returns>
        </member>
        <member name="M:PerseusApi.Document.IDocumentMultiProcessing.GetParameters(PerseusApi.Document.IDocumentData[],System.String@)">
            <summary>
            Define here the parameters that determine the specifics of the processing.
            </summary>
            <param name="inputData">The parameters might depend on the data matrices.</param>
            <param name="errString">Set this to a value != null if an error occured. The error string will be displayed to the user.</param>
            <returns>The set of parameters.</returns>
        </member>
        <member name="M:PerseusApi.Document.IDocumentAnalysis.GetParameters(PerseusApi.Document.IDocumentData,System.String@)">
            <summary>
            Define here the parameters that determine the specifics of the analysis.
            </summary>
            <param name="mdata">The parameters might depend on the document.</param>
            <param name="errString">Set this to a value != null if an error occured. The error string will be displayed to the user.</param>
            <returns>The set of parameters.</returns>
        </member>
        <member name="M:PerseusApi.Document.IDocumentExport.GetParameters(PerseusApi.Document.IDocumentData,System.String@)">
            <summary>
            Define here the parameters that determine the specifics of the export.
            </summary>
            <param name="mdata">The parameters might depend on the data matrix.</param>
            <param name="errString">Set this to a value != null if an error occured. The error string will be displayed to the user.</param>
            <returns>The set of parameters.</returns>
        </member>
        <member name="M:PerseusApi.Document.IDocumentProcessing.GetParameters(PerseusApi.Document.IDocumentData,System.String@)">
            <summary>
            Define here the parameters that determine the specifics of the processing.
            </summary>
            <param name="mdata">The parameters might depend on the data matrix.</param>
            <param name="errString">Set this to a value != null if an error occured. The error string will be displayed to the user.</param>
            <returns>The set of parameters.</returns>
        </member>
        <member name="T:PerseusApi.Generic.IActivity">
            <summary>
            This interface is the base from which all other activities are derived. 
            It provides properties that are common to all activities. 
            </summary>
        </member>
        <member name="P:PerseusApi.Generic.IActivity.HasButton">
            <summary>
            A shortcut button will be displayed in the top button row. This also requires that an image is returned by <code>ButtonImage</code>>. 
            </summary>
        </member>
        <member name="M:PerseusApi.Generic.IActivity.GetMaxThreads(BaseLibS.Param.Parameters)">
            <summary>
            Specifies the maximal number of threads that this acticity can make use of simultaneously.
            </summary>
            <param name="parameters">The parameters of the activity. The maximal usable number of threads might depend on the parameter settings.</param>
            <returns></returns>
        </member>
        <member name="P:PerseusApi.Generic.IActivity.Url">
            <summary>
            Link to a URL providing further information, documentation, advice about this activity. 
            </summary>
        </member>
        <member name="P:PerseusApi.Generic.IActivity.DisplayImage">
            <summary>
            The image for the menu entry and the shortcut button when applicable.
            </summary>
        </member>
        <member name="T:PerseusApi.Generic.IAnalysis">
            <summary>
            Grandmother of all data analysis activities. They operate on one IData and do not produce any new ones 
            automatically. They may do so interactively. 
            </summary>
        </member>
        <member name="T:PerseusApi.Generic.IAnalysisResult">
            <summary>
            The output of a generic <code>IAnalysis</code>. It contains the data for this IAnalysis which is serialized with the session. 
            </summary>
        </member>
        <member name="P:PerseusApi.Generic.IAnalysisResult.Heading">
            <summary>
            Heading to be displayed on the tab page created for the visual component of this <code>IAnalysisResult</code>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PerseusApi.Generic.IAnalysisResult.CreateUiElement(System.Action{System.String},System.Action{PerseusApi.Generic.IData})">
            <summary>
            Creates the visual component.
            </summary>
            <param name="updateStatus">Callback for displaying text in the status bar.</param>
            <param name="newData">A new <code>IData</code> can be put here interactively into the workflow.</param>
            <returns>
            The visual component. Usually this is a <code>UIElement</code> from WPF. Return type is object so that this 
            interface can be used on the server side.
            </returns>
        </member>
        <member name="T:PerseusApi.Generic.IData">
            <summary>
            Generic data structure holding the data that flows through the network. 
            For example, this could be <code>IMatrixData</code>.
            </summary>
        </member>
        <member name="P:PerseusApi.Generic.IData.Name">
            <summary>
            This is the name that e.g. appears in drop-down menus.
            </summary>
        </member>
        <member name="P:PerseusApi.Generic.IData.Description">
            <summary>
            The context help that will appear in tool tips etc. 
            </summary>
        </member>
        <member name="P:PerseusApi.Generic.IData.AltName">
            <summary>
            A name that can be displayed as an alternative to <code>Name</code>.
            </summary>
        </member>
        <member name="P:PerseusApi.Generic.IData.Origin">
            <summary>
            For data that has been read from a file this string will contain the file name. If it was originally 
            created by an activity (e.g. 'Create random matrix') it will contain the name of the creating activity.
            </summary>
        </member>
        <member name="P:PerseusApi.Generic.IData.CreationDate">
            <summary>
            Specifies the date and time on which this item has been created.
            </summary>
        </member>
        <member name="P:PerseusApi.Generic.IData.User">
            <summary>
            Name of the user who created this data item.
            </summary>
        </member>
        <member name="M:PerseusApi.Generic.IData.CreateNewInstance">
            <summary>
            Creates an instance of the same data type.
            </summary>
            <returns>New instance.</returns>
        </member>
        <member name="M:PerseusApi.Generic.IData.CreateNewInstance(PerseusApi.Generic.DataType)">
            <summary>
            Creates an instance of the specified data type.
            </summary>
            <returns>New instance.</returns>
        </member>
        <member name="M:PerseusApi.Generic.IData.Clear">
            <summary>
            Clears up all data from this instance.
            </summary>
        </member>
        <member name="M:PerseusApi.Generic.IDataWithAnnotationColumns.GetCategoryColumnAt(System.Int32)">
            <summary>
                For performance reasons, please do not call this inside a loop when iterating over the elements.
                Use <code>GetCategoryColumnEntryAt</code> instead.
            </summary>
        </member>
        <member name="M:PerseusApi.Generic.IDataWithAnnotationColumns.GetCategoryColumnEntryAt(System.Int32,System.Int32)">
            <summary>
            Get all the categories associated with the table entry at the specified column and row.
            </summary>
            <param name="column"></param>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:PerseusApi.Generic.IDataWithAnnotationColumns.GetCategoryColumnValuesAt(System.Int32)">
            <summary>
            Get all category values used in the specified column.
            See <code>PerseusLibS.ICategoryVectorData</code>.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:PerseusApi.Generic.IDataWithAnnotationColumns.SetCategoryColumnAt(System.String[][],System.Int32)">
            <summary>
            Change the values of an existing category column.
            </summary>
            <param name="vals">new values</param>
            <param name="column">existing column</param>
        </member>
        <member name="P:PerseusApi.Generic.IDataWithAnnotationColumns.NumericColumns">
            <summary>
            Gets all numeric columns in the table.
            Might not be feasible for large tables, use <see cref="M:PerseusApi.Generic.IDataWithAnnotationColumns.NumericColumnAt(System.Int32,System.Int32)"/> instead
            </summary>
        </member>
        <member name="M:PerseusApi.Generic.IDataWithAnnotationColumns.NumericColumnAt(System.Int32,System.Int32)">
            <summary>
            Gets the numeric column values at the specified row
            </summary>
            <param name="column"></param>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="P:PerseusApi.Generic.IDataWithAnnotationColumns.StringColumns">
            <summary>
            Gets all string columns in the table.
            Might not be feasible for large tables, use <see cref="M:PerseusApi.Generic.IDataWithAnnotationColumns.StringColumnAt(System.Int32,System.Int32)"/> instead
            </summary>
        </member>
        <member name="M:PerseusApi.Generic.IDataWithAnnotationColumns.StringColumnAt(System.Int32,System.Int32)">
            <summary>
            Get string column values at the specified column and row
            </summary>
            <param name="column"></param>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="P:PerseusApi.Generic.IDataWithAnnotationColumns.MultiNumericColumns">
            <summary>
            Gets all multi-numeric columns in the table.
            Might not be feasible for large tables, use <see cref="M:PerseusApi.Generic.IDataWithAnnotationColumns.MultiNumericColumnAt(System.Int32,System.Int32)"/> instead
            </summary>
        </member>
        <member name="M:PerseusApi.Generic.IDataWithAnnotationColumns.MultiNumericColumnAt(System.Int32,System.Int32)">
            <summary>
            Gets the multi-numeric values at the specified column and row
            </summary>
            <param name="column"></param>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:PerseusApi.Generic.IDataWithAnnotationRows.GetCategoryRowAt(System.Int32)">
            <summary>
            Returns the entire category row at the given row index.
            
            For performance reasons, please do not call this inside a loop when iterating over the elements. 
            Use <see cref="M:PerseusApi.Generic.IDataWithAnnotationRows.GetCategoryRowEntryAt(System.Int32,System.Int32)"/>> instead.
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:PerseusApi.Generic.IDataWithAnnotationRows.GetCategoryRowEntryAt(System.Int32,System.Int32)">
            <summary>
            Returns all the categories at the given row and column.
            </summary>
            <param name="row"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:PerseusApi.Generic.IDataWithAnnotationRows.GetCategoryRowValuesAt(System.Int32)">
            <summary>
            Returns the unique categories used in the given row.
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:PerseusApi.Generic.IDataWithAnnotationRows.ExtractColumns(System.Int32[])">
            <summary>
            extract the specified columns in-place
            </summary>
            <param name="indices">columns to keep</param>
        </member>
        <member name="T:PerseusApi.Generic.IMultiAnalysis">
            <summary>
            Grandmother of all data multi-analysis activities. They operate on multiple IData and do not produce any new ones 
            automatically. They may do so interactively.
            </summary>
        </member>
        <member name="M:PerseusApi.Generic.IUpload.GetParameters(System.String@)">
            <summary>
            Define here the parameters that determine the specifics of the upload.
            </summary>
            <param name="errString">Set this to a value != null if an error occured. The error string will be displayed to the user.</param>
            <returns>The set of parameters.</returns>
        </member>
        <member name="T:PerseusApi.Generic.IVisualization">
            <summary>
            Please do not implement this interface. It is still experimental.
            </summary>
        </member>
        <member name="M:PerseusApi.Matrix.IMatrixMultiAnalysis.GetParameters(PerseusApi.Matrix.IMatrixData[],System.String@)">
            <summary>
            Define here the parameters that determine the specifics of the analysis.
            </summary>
            <param name="mdata">The parameters might depend on the data matrix.</param>
            <param name="errString">Set this to a value != null if an error occured. The error string will be displayed to the user.</param>
            <returns>The set of parameters.</returns>
        </member>
        <member name="M:PerseusApi.Matrix.IMatrixMultiProcessing.GetParameters(PerseusApi.Matrix.IMatrixData[],System.String@)">
            <summary>
            Define here the parameters that determine the specifics of the processing.
            </summary>
            <param name="inputData">The parameters might depend on the data matrices.</param>
            <param name="errString">Set this to a value != null if an error occured. The error string will be displayed to the user.</param>
            <returns>The set of parameters.</returns>
        </member>
        <member name="T:PerseusApi.Matrix.IMatrixActivity">
            <summary>
            Marker interface indicating activities that operate on <code>IMatrixData</code>. There are currently five 
            <code>IMatrixActivity</code> types implemented: <code>IMatrixUpload</code>, <code>IMatrixProcessing</code>, 
            <code>IMatrixAnalysis</code>, <code>IMatrixCombination</code> and <code>IMatrixExport</code>.
            </summary>
        </member>
        <member name="M:PerseusApi.Matrix.IMatrixAnalysis.GetParameters(PerseusApi.Matrix.IMatrixData,System.String@)">
            <summary>
            Define here the parameters that determine the specifics of the analysis.
            </summary>
            <param name="mdata">The parameters might depend on the data matrix.</param>
            <param name="errString">Set this to a value != null if an error occured. The error string will be displayed to the user.</param>
            <returns>The set of parameters.</returns>
        </member>
        <member name="T:PerseusApi.Matrix.IMatrixData">
            <summary>
                The data structure representing an augmented data matrix which is the main data object that is flowing through
                the Perseus workflow. Note that plugin programmers are not supposed to write implementations of <code>IMatrixData</code>.
                The interface only serves to encapsulate the complexity of the implementation for the purpose of plugin programming.
            </summary>
        </member>
        <member name="M:PerseusApi.Matrix.IMatrixExport.GetParameters(PerseusApi.Matrix.IMatrixData,System.String@)">
            <summary>
            Define here the parameters that determine the specifics of the export.
            </summary>
            <param name="mdata">The parameters might depend on the data matrix.</param>
            <param name="errString">Set this to a value != null if an error occured. The error string will be displayed to the user.</param>
            <returns>The set of parameters.</returns>
        </member>
        <member name="M:PerseusApi.Matrix.IMatrixProcessing.ProcessData(PerseusApi.Matrix.IMatrixData,BaseLibS.Param.Parameters,PerseusApi.Matrix.IMatrixData[]@,PerseusApi.Document.IDocumentData[]@,PerseusApi.Generic.ProcessInfo)">
            <summary>
            This is where the actual calculation is implemented. 
            </summary>
            <param name="mdata">A clone of the previous matrix. Changes can be made in place.</param>
            <param name="param">Set of parameters with values as they were specified by the user</param>
            <param name="supplTables">Additional matrices can be created which will appear as additional output nodes in the workflow.</param>
            <param name="documents">Documents with textual information on the analysis results can be created here.</param>
            <param name="processInfo">Object used to communicate with this process.</param>
        </member>
        <member name="M:PerseusApi.Matrix.IMatrixProcessing.GetParameters(PerseusApi.Matrix.IMatrixData,System.String@)">
            <summary>
            Define here the parameters that determine the specifics of the processing.
            </summary>
            <param name="mdata">The parameters might depend on the data matrix.</param>
            <param name="errString">Set this to a value != null if an error occured. The error string will be displayed to the user.</param>
            <returns>The set of parameters.</returns>
        </member>
        <member name="T:PerseusApi.Network.IEdge">
            <summary>
            Network edge connecting source and target
            </summary>
        </member>
        <member name="P:PerseusApi.Network.IEdge.Source">
            <summary>
            Edge source
            </summary>
        </member>
        <member name="P:PerseusApi.Network.IEdge.Target">
            <summary>
            Edge target
            </summary>
        </member>
        <member name="T:PerseusApi.Network.IGraph">
            <summary>
            Node-link graph
            </summary>
        </member>
        <member name="P:PerseusApi.Network.IGraph.Edges">
            <summary>
            Edges
            </summary>
        </member>
        <member name="M:PerseusApi.Network.IGraph.AddNode">
            <summary>
            Add node and return reference.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PerseusApi.Network.IGraph.AddEdge(PerseusApi.Network.INode,PerseusApi.Network.INode)">
            <summary>
            Add edge between nodes and return reference.
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="P:PerseusApi.Network.IGraph.NumberOfNodes">
            <summary>
            Number of nodes in the graph
            </summary>
        </member>
        <member name="P:PerseusApi.Network.IGraph.NumberOfEdges">
            <summary>
            Number of edges in the graph
            </summary>
        </member>
        <member name="M:PerseusApi.Network.IGraph.RemoveNodes(PerseusApi.Network.INode[])">
            <summary>
            Remove the nodes from the graph. Removes dangling edges.
            </summary>
            <param name="nodes"></param>
        </member>
        <member name="M:PerseusApi.Network.IGraph.RemoveNodes(System.Collections.Generic.IEnumerable{PerseusApi.Network.INode})">
            <summary>
            Remove the nodes from the graph. Removes dangling edges.
            </summary>
            <param name="nodes"></param>
        </member>
        <member name="M:PerseusApi.Network.IGraph.RemoveEdges(PerseusApi.Network.IEdge[])">
            <summary>
            Remove edges from the graph.
            </summary>
            <param name="edges"></param>
        </member>
        <member name="M:PerseusApi.Network.IGraph.RemoveEdges(System.Collections.Generic.IEnumerable{PerseusApi.Network.IEdge},System.Collections.Generic.HashSet{PerseusApi.Network.INode}@)">
            <summary>
            Remove edges from the graph.
            </summary>
            <param name="edges"></param>
            <param name="orphans">Orphaned nodes without any remaining edges.</param>
        </member>
        <member name="T:PerseusApi.Network.IIdentifiable">
            <summary>
            Identified by Guid. Used for graph, nodes and edges
            </summary>
        </member>
        <member name="T:PerseusApi.Network.Identifiable">
            <summary>
            Identified by Guid
            </summary>
        </member>
        <member name="P:PerseusApi.Network.Identifiable.Guid">
            <summary>
            Unique key
            </summary>
        </member>
        <member name="T:PerseusApi.Network.INetworkActivity">
            <summary>
            Base interface for all network-specific activities
            </summary>
        </member>
        <member name="T:PerseusApi.Network.INetworkAnalysis">
            <summary>
            Base interface for all network-specific analyses
            </summary>
        </member>
        <member name="M:PerseusApi.Network.INetworkAnalysis.AnalyzeData(PerseusApi.Network.INetworkData,BaseLibS.Param.Parameters,PerseusApi.Generic.ProcessInfo)">
            <summary>
            Run the analysis with the parameters specified in <see cref="M:PerseusApi.Network.INetworkAnalysis.GetParameters(PerseusApi.Network.INetworkData,System.String@)"/>.
            </summary>
            <param name="ndata"></param>
            <param name="param"></param>
            <param name="processInfo"></param>
            <returns></returns>
        </member>
        <member name="M:PerseusApi.Network.INetworkAnalysis.GetParameters(PerseusApi.Network.INetworkData,System.String@)">
            <summary>
            Define here the parameters that determine the specifics of the analysis.
            </summary>
            <param name="ndata">The parameters might depend on the data matrix.</param>
            <param name="errString">Set this to a value != null if an error occured. The error string will be displayed to the user.</param>
            <returns>The set of parameters.</returns>
        </member>
        <member name="T:PerseusApi.Network.INetworkData">
            <summary>
            Network collection table interface
            </summary>
        </member>
        <member name="P:PerseusApi.Network.INetworkData.Item(System.Int32)">
            <summary>
            Get network by index
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:PerseusApi.Network.INetworkData.AddNetworks(PerseusApi.Network.INetworkInfo[])">
            <summary>
            Add a network to the collection
            </summary>
            <param name="networks"></param>
        </member>
        <member name="T:PerseusApi.Network.INetworkExport">
            <summary>
            Network export
            </summary>
        </member>
        <member name="M:PerseusApi.Network.INetworkExport.Export(BaseLibS.Param.Parameters,PerseusApi.Network.INetworkData,PerseusApi.Generic.ProcessInfo)">
            <summary>
            Export the network given the parameters from <see cref="M:PerseusApi.Network.INetworkExport.GetParameters(PerseusApi.Network.INetworkData,System.String@)"/>.
            </summary>
            <param name="parameters"></param>
            <param name="ndata"></param>
            <param name="processInfo"></param>
        </member>
        <member name="M:PerseusApi.Network.INetworkExport.GetParameters(PerseusApi.Network.INetworkData,System.String@)">
            <summary>
            Define here the parameters that determine the specifics of the export.
            </summary>
            <param name="ndata">The parameters might depend on the data matrix.</param>
            <param name="errString">Set this to a value != null if an error occured. The error string will be displayed to the user.</param>
            <returns>The set of parameters.</returns>
        </member>
        <member name="T:PerseusApi.Network.INetworkFromMatrix">
            <summary>
            Derive a network from a matrix
            </summary>
        </member>
        <member name="M:PerseusApi.Network.INetworkFromMatrix.ProcessData(PerseusApi.Matrix.IMatrixData,PerseusApi.Network.INetworkData,BaseLibS.Param.Parameters,PerseusApi.Matrix.IMatrixData[]@,PerseusApi.Document.IDocumentData[]@,PerseusApi.Generic.ProcessInfo)">
            <summary>
            Create the network from the matrix input data and the parameters specified in <see cref="M:PerseusApi.Network.INetworkFromMatrix.GetParameters(PerseusApi.Matrix.IMatrixData,System.String@)"/>.
            </summary>
            <param name="inData"></param>
            <param name="outData"></param>
            <param name="param"></param>
            <param name="supplTables"></param>
            <param name="documents"></param>
            <param name="processInfo"></param>
        </member>
        <member name="M:PerseusApi.Network.INetworkFromMatrix.GetParameters(PerseusApi.Matrix.IMatrixData,System.String@)">
            <summary>
            Define here the parameters that determine the specifics of the processing.
            </summary>
            <param name="mdata">The parameters might depend on the data matrix.</param>
            <param name="errString">Set this to a value != null if an error occured. The error string will be displayed to the user.</param>
            <returns>The set of parameters.</returns>
        </member>
        <member name="T:PerseusApi.Network.INetworkInfo">
            <summary>
            Network interface. See also <see cref="T:PerseusApi.Network.INetworkData"/> for a collection of networks.
            </summary>
        </member>
        <member name="P:PerseusApi.Network.INetworkInfo.NodeTable">
            <summary>
            Node Table
            </summary>
        </member>
        <member name="P:PerseusApi.Network.INetworkInfo.EdgeTable">
            <summary>
            Edge Table
            </summary>
        </member>
        <member name="P:PerseusApi.Network.INetworkInfo.NodeIndex">
            <summary>
            Maps the node from the <see cref="P:PerseusApi.Network.INetworkInfo.Graph"/> to the corresponding row in the <see cref="P:PerseusApi.Network.INetworkInfo.NodeTable"/>.
            </summary>
        </member>
        <member name="P:PerseusApi.Network.INetworkInfo.EdgeIndex">
            <summary>
            Maps the edge from the <see cref="P:PerseusApi.Network.INetworkInfo.Graph"/> to the corresponding row in the <see cref="P:PerseusApi.Network.INetworkInfo.EdgeTable"/>.
            </summary>
        </member>
        <member name="P:PerseusApi.Network.INetworkInfo.Graph">
            <summary>
            Node-link graph
            </summary>
        </member>
        <member name="P:PerseusApi.Network.INetworkInfo.Name">
            <summary>
            Network name
            </summary>
        </member>
        <member name="P:PerseusApi.Network.INetworkInfo.MetaData">
            <summary>
            Contais arbitrary meta-data for the networks.
            </summary>
        </member>
        <member name="T:PerseusApi.Network.INetworkMergeWithMatrix">
            <summary>
            Merge a network and a matrix
            </summary>
        </member>
        <member name="M:PerseusApi.Network.INetworkMergeWithMatrix.ProcessData(PerseusApi.Network.INetworkData,PerseusApi.Matrix.IMatrixData,BaseLibS.Param.Parameters,PerseusApi.Matrix.IMatrixData[]@,PerseusApi.Document.IDocumentData[]@,PerseusApi.Generic.ProcessInfo)">
            <summary>
            Merge the input network with the provided matrix.
            </summary>
            <param name="data"></param>
            <param name="inMatrix"></param>
            <param name="param"></param>
            <param name="supplTables"></param>
            <param name="documents"></param>
            <param name="processInfo"></param>
            <returns></returns>
        </member>
        <member name="M:PerseusApi.Network.INetworkMergeWithMatrix.GetParameters(PerseusApi.Network.INetworkData,PerseusApi.Matrix.IMatrixData,System.String@)">
            <summary>
            Define here the parameters that determine the specifics of the processing.
            </summary>
            <param name="data">The parameters might depend on the data.</param>
            <param name="inMatrix">and on the matrix as well.</param>
            <param name="errString">Set this to a value != null if an error occured. The error string will be displayed to the user.</param>
            <returns>The set of parameters.</returns>
        </member>
        <member name="T:PerseusApi.Network.INetworkMultiAnalysis">
            <summary>
            Analyze multiple network collections
            </summary>
        </member>
        <member name="M:PerseusApi.Network.INetworkMultiAnalysis.AnalyzeData(PerseusApi.Network.INetworkData[],BaseLibS.Param.Parameters,PerseusApi.Generic.ProcessInfo)">
            <summary>
            Analyze the network collection
            </summary>
            <param name="ndata"></param>
            <param name="param"></param>
            <param name="processInfo"></param>
            <returns></returns>
        </member>
        <member name="M:PerseusApi.Network.INetworkMultiAnalysis.GetParameters(PerseusApi.Network.INetworkData[],System.String@)">
            <summary>
            Define here the parameters that determine the specifics of the analysis.
            </summary>
            <param name="ndata">The parameters might depend on the data matrix.</param>
            <param name="errString">Set this to a value != null if an error occured. The error string will be displayed to the user.</param>
            <returns>The set of parameters.</returns>
        </member>
        <member name="T:PerseusApi.Network.INetworkMultiProcessing">
            <summary>
            Process multiple network collections.
            </summary>
        </member>
        <member name="M:PerseusApi.Network.INetworkMultiProcessing.ProcessData(PerseusApi.Network.INetworkData[],BaseLibS.Param.Parameters,PerseusApi.Matrix.IMatrixData[]@,PerseusApi.Document.IDocumentData[]@,PerseusApi.Generic.ProcessInfo)">
            <summary>
            Process multiple network collections.
            </summary>
        </member>
        <member name="M:PerseusApi.Network.INetworkMultiProcessing.GetParameters(PerseusApi.Network.INetworkData[],System.String@)">
            <summary>
            Define here the parameters that determine the specifics of the processing.
            </summary>
            <param name="inputData">The parameters might depend on the data matrices.</param>
            <param name="errString">Set this to a value != null if an error occured. The error string will be displayed to the user.</param>
            <returns>The set of parameters.</returns>
        </member>
        <member name="T:PerseusApi.Network.INetworkProcessing">
            <summary>
            Process a network.
            </summary>
        </member>
        <member name="M:PerseusApi.Network.INetworkProcessing.ProcessData(PerseusApi.Network.INetworkData,BaseLibS.Param.Parameters,PerseusApi.Matrix.IMatrixData[]@,PerseusApi.Document.IDocumentData[]@,PerseusApi.Generic.ProcessInfo)">
            <summary>
            Process a network given the parameters specified in <see cref="M:PerseusApi.Network.INetworkProcessing.GetParameters(PerseusApi.Network.INetworkData,System.String@)"/>.
            </summary>
            <param name="ndata"></param>
            <param name="param"></param>
            <param name="supplTables"></param>
            <param name="documents"></param>
            <param name="processInfo"></param>
        </member>
        <member name="M:PerseusApi.Network.INetworkProcessing.GetParameters(PerseusApi.Network.INetworkData,System.String@)">
            <summary>
            Define here the parameters that determine the specifics of the processing.
            </summary>
            <param name="ndata">The parameters might depend on the data matrix.</param>
            <param name="errString">Set this to a value != null if an error occured. The error string will be displayed to the user.</param>
            <returns>The set of parameters.</returns>
        </member>
        <member name="T:PerseusApi.Network.INetworkToMatrix">
            <summary>
            Process a network collection into a matrix
            </summary>
        </member>
        <member name="M:PerseusApi.Network.INetworkToMatrix.ProcessData(PerseusApi.Network.INetworkData,PerseusApi.Matrix.IMatrixData,BaseLibS.Param.Parameters,PerseusApi.Matrix.IMatrixData[]@,PerseusApi.Document.IDocumentData[]@,PerseusApi.Generic.ProcessInfo)">
            <summary>
            Process a network collection into a matrix
            </summary>
            <param name="inData"></param>
            <param name="outData"></param>
            <param name="param"></param>
            <param name="supplTables"></param>
            <param name="documents"></param>
            <param name="processInfo"></param>
        </member>
        <member name="M:PerseusApi.Network.INetworkToMatrix.GetParameters(PerseusApi.Network.INetworkData,System.String@)">
            <summary>
            Define here the parameters that determine the specifics of the processing.
            </summary>
            <param name="mdata">The parameters might depend on the data matrix.</param>
            <param name="errString">Set this to a value != null if an error occured. The error string will be displayed to the user.</param>
            <returns>The set of parameters.</returns>
        </member>
        <member name="T:PerseusApi.Network.INetworkUpload">
            <summary>
            Load a network collection into Perseus
            </summary>
        </member>
        <member name="M:PerseusApi.Network.INetworkUpload.LoadData(PerseusApi.Network.INetworkData,BaseLibS.Param.Parameters,PerseusApi.Matrix.IMatrixData[]@,PerseusApi.Document.IDocumentData[]@,PerseusApi.Generic.ProcessInfo)">
            <summary>
            Load a network collection into Perseus
            </summary>
            <param name="ndata"></param>
            <param name="parameters"></param>
            <param name="supplTables"></param>
            <param name="documents"></param>
            <param name="processInfo"></param>
        </member>
        <member name="T:PerseusApi.Network.INode">
            <summary>
            Graph node
            </summary>
        </member>
        <member name="P:PerseusApi.Network.INode.InEdges">
            <summary>
            Incoming edges
            </summary>
        </member>
        <member name="P:PerseusApi.Network.INode.OutEdges">
            <summary>
            Outgoing edges
            </summary>
        </member>
        <member name="P:PerseusApi.Network.INode.Neighbors">
            <summary>
            Neighboring nodes
            </summary>
        </member>
        <member name="P:PerseusApi.Network.INode.InDegree">
            <summary>
            Degree of incoming edges
            </summary>
        </member>
        <member name="P:PerseusApi.Network.INode.OutDegree">
            <summary>
            Degree of outgoing edges
            </summary>
        </member>
        <member name="T:PerseusApi.Utils.PerseusFactory">
            <summary>
            Factory class that provides static methods for creating instances of data items used in Perseus
            </summary>
        </member>
        <member name="M:PerseusApi.Utils.PerseusFactory.CreateMatrixData">
            <summary>
            Creates an empty default implementation of <see cref="T:PerseusApi.Matrix.IMatrixData"/>.
            </summary>
        </member>
        <member name="M:PerseusApi.Utils.PerseusFactory.CreateMatrixData(System.Single[0:,0:])">
            <summary>
            Create minimally initialized <see cref="T:PerseusApi.Matrix.IMatrixData"/>.
            </summary>
        </member>
        <member name="M:PerseusApi.Utils.PerseusFactory.CreateMatrixData(System.Single[0:,0:],System.Collections.Generic.List{System.String})">
            <summary>
            Create minimally initialized <see cref="T:PerseusApi.Matrix.IMatrixData"/>.
            </summary>
        </member>
        <member name="M:PerseusApi.Utils.PerseusFactory.CreateDocumentData">
            <summary>
            Creates an empty default implementation of <see cref="T:PerseusApi.Document.IDocumentData"/>.
            </summary>
        </member>
        <member name="M:PerseusApi.Utils.PerseusFactory.CreateNetworkData">
            <summary>
            Creates an empty default implementation of <see cref="T:PerseusApi.Network.INetworkData"/>.
            </summary>
        </member>
        <member name="M:PerseusApi.Utils.PerseusFactory.CreateDataWithAnnotationColumns">
            <summary>
            Creates an empty default implementation of <see cref="T:PerseusApi.Generic.IDataWithAnnotationColumns"/>.
            </summary>
        </member>
        <member name="M:PerseusApi.Utils.PerseusUtils.HasBadParameters(System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[],PerseusApi.Generic.ProcessInfo,System.Collections.Generic.IList{System.String})">
            <summary>
            Check for duplicate column selections
            </summary>
        </member>
        <member name="M:PerseusApi.Utils.PerseusUtils.GetAvailableAnnots(System.String[]@,System.String[]@)">
            <summary>
            Search the annotation folder for annotations.
            </summary>
            <param name="baseNames">The name of the base identifier from which the mapping will be performed. For example Uniprot, ENSG</param>
            <param name="files"></param>
            <returns>A list of annotations for each file. For example <code>{{"Chromosome", "Orientation"},{"KEGG name", "Pfam"}}</code></returns>
        </member>
        <member name="M:PerseusApi.Utils.PerseusUtils.GetAvailableAnnots(System.String[]@,System.String[]@,System.Collections.Generic.List{System.String}@)">
            <summary>
            Search the annotation folder for annotations.
            </summary>
            <param name="baseNames">The name of the base identifier from which the mapping will be performed. For example Uniprot, ENSG</param>
            <param name="files"></param>
            <param name="badFiles">List of files which could not be processed</param>
            <returns>A list of annotations for each file. For example <code>{{"Chromosome", "Orientation"},{"KEGG name", "Pfam"}}</code></returns>
        </member>
        <member name="M:PerseusApi.Utils.PerseusUtils.GetAvailableAnnots(System.String[]@,PerseusApi.Generic.AnnotType[][]@,System.String[]@)">
            <summary>
            Search the annotation folder for annotations.
            </summary>
            <param name="baseNames">The name of the base identifier from which the mapping will be performed. For example Uniprot, ENSG</param>
            <param name="types"><see cref="T:PerseusApi.Generic.AnnotType"/></param>
            <param name="files"></param>
            <returns>A list of annotations for each file. For example <code>{{"Chromosome", "Orientation"},{"KEGG name", "Pfam"}}</code></returns>
        </member>
        <member name="M:PerseusApi.Utils.PerseusUtils.GetAvailableAnnots(System.String[]@,PerseusApi.Generic.AnnotType[][]@,System.String[]@,System.Collections.Generic.List{System.String}@)">
            <summary>
            Search the annotation folder for annotations.
            </summary>
            <param name="baseNames">The name of the base identifier from which the mapping will be performed. For example Uniprot, ENSG</param>
            <param name="types"><see cref="T:PerseusApi.Generic.AnnotType"/></param>
            <param name="files"></param>
            <param name="badFiles">List of files which could not be processed</param>
            <returns>A list of annotations for each file. For example <code>{{"Chromosome", "Orientation"},{"KEGG name", "Pfam"}}</code></returns>
        </member>
        <member name="M:PerseusApi.Utils.PerseusUtils.WriteDataWithAnnotationColumns(PerseusApi.Generic.IDataWithAnnotationColumns,System.String)">
            <summary>
            Write data table to file with tab separation.
            </summary>
            <param name="data"></param>
            <param name="filename"></param>
        </member>
        <member name="M:PerseusApi.Utils.PerseusUtils.WriteDataWithAnnotationColumns(PerseusApi.Generic.IDataWithAnnotationColumns,System.IO.StreamWriter)">
            <summary>
            Write data table to stream with tab separation.
            </summary>
            <param name="data"></param>
            <param name="writer"></param>
        </member>
        <member name="M:PerseusApi.Utils.PerseusUtils.WriteMatrix(PerseusApi.Matrix.IMatrixData,System.IO.StreamWriter,System.Boolean)">
            <summary>
            Write matrix to stream with tab separation.
            </summary>
            <param name="data"></param>
            <param name="writer"></param>
            <param name="addtlMatrices"></param>
        </member>
        <member name="M:PerseusApi.Utils.PerseusUtils.WriteMatrixToFile(PerseusApi.Matrix.IMatrixData,System.String,System.Boolean)">
            <summary>
            Write matrix to file with tab separation
            </summary>
            <param name="data"></param>
            <param name="filename"></param>
            <param name="addtlMatrices">if true numbers are converted to triples <code>value;imputed;quality</code></param>
        </member>
        <member name="M:PerseusApi.Utils.PerseusUtils.HasAnyDescription(PerseusApi.Matrix.IMatrixData)">
            <summary>
            True if any column description is set.
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
    </members>
</doc>
